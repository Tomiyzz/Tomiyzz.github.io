<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="en" /><updated>2021-12-01T10:43:36+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">记录学习历程 Tomiyzz</title><subtitle>记录每次学到的新知识,希望能有所收获!!!</subtitle><author><name>Tomiyzz Zhou</name><email>zzl180520@163.com</email></author><entry><title type="html">VUE 2.0 知识点</title><link href="http://localhost:4000/2021/11/16/vue2.0-knowledge_point/" rel="alternate" type="text/html" title="VUE 2.0 知识点" /><published>2021-11-16T12:00:00+08:00</published><updated>2021-11-16T12:00:00+08:00</updated><id>http://localhost:4000/2021/11/16/vue2.0-knowledge_point</id><content type="html" xml:base="http://localhost:4000/2021/11/16/vue2.0-knowledge_point/">&lt;p class=&quot;message&quot;&gt;巩固 VUE 2.0 的知识点&lt;/p&gt;

&lt;h2 id=&quot;什么是-mvvm&quot;&gt;什么是 MVVM&lt;/h2&gt;

&lt;p&gt;MVVM 是 Model-View-ViewModel 的缩写. MVVM 是一种设计思想.Model 代表数据模型,也可以在 Model 中定义数据修改的操作和业务逻辑;View 代表 UI 组件,它负责将数据模型转化成 UI 展现出来,
ViewModel 是一个同步 View 和 Model 的对象&lt;/p&gt;

&lt;p&gt;在 MVVM 架构下,View 和 Model 之间并没有直接的联系,而是通过 ViewModel 进行交互的,Model 和 ViewModel 之间的交互是双向的,因此 View 数据的变化会同步到 Model 中,而 Model 数据的变化也会反应到 View 上&lt;/p&gt;

&lt;p&gt;ViewModel 通过双向数据绑定把 View 和 Model 层连接了起来,而 View 和 Model 之间的同步工作完全是自动的,无需人为干涉,因此开发者只需要关注业务逻辑,不需要手动的操作 DOM,不需要数据状态的同步问题,复杂的数据状态维护完全由 MVVM 来统一管理&lt;/p&gt;

&lt;h2 id=&quot;mvvm-和-mvc-区别它和其他框架jquery的区别哪些场景适合&quot;&gt;MVVM 和 MVC 区别?它和其他框架(Jquery)的区别?哪些场景适合?&lt;/h2&gt;

&lt;p&gt;MVC 和 MVVM 其实区别并不大. 都是一种设计思想. 主要就是 MVC 中 Controller 演变成的 ViewModel. MVVM 主要解决了 MVC 中大量的 DOM 操作使页面渲染性能降低,加载速度变慢,影响用户体验&lt;/p&gt;

&lt;p&gt;区别:vue 数据驱动,通过数据来显示图层而不是节点操作&lt;/p&gt;

&lt;p&gt;场景:数据操作比较多的场景,更加便捷&lt;/p&gt;

&lt;h2 id=&quot;vue-的优点是什么&quot;&gt;Vue 的优点是什么?&lt;/h2&gt;

&lt;p&gt;低耦合: 视图可以独立于 Model 变化和修改, 一个 ViewModel 可以绑定到不同的“View”上,当 View 变化的时候 Model 可以不变, 当 Model 变化的时候 View 也可以不变&lt;/p&gt;

&lt;p&gt;可复用性: 可以把一些视图逻辑放在 ViewModel 里面,让很多 View 复用这段视图逻辑.&lt;/p&gt;

&lt;p&gt;独立开发: 开发人员可以专注于业务逻辑和数据的开发,设计人员可以专注于页面设计&lt;/p&gt;

&lt;p&gt;可测试: 界面素来是比较难测试的,而现在测试可以针对 ViewModel 来写&lt;/p&gt;

&lt;h2 id=&quot;组件之间的传值&quot;&gt;组件之间的传值&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;父组件 -&amp;gt; 子组件
    &lt;ul&gt;
      &lt;li&gt;父组件给子组件绑定属性, 子组件通过 props 属性来接收传递的数据&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;子组件 -&amp;gt; 父组件
    &lt;ul&gt;
      &lt;li&gt;在父组件中声明一个接收数据的函数,父组件给子组件绑定事件,子组件通过$emit 触发事件,并且可在此时传递参数,父组件通过定义好的监听事件接收参数&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;兄弟组件
    &lt;ul&gt;
      &lt;li&gt;创建一个新的 vue 实例,让各个兄弟组件公用一个事件机制,通过事件触发$emit(方法名,传递的数据),在mounted()钩子函数中,触发事件$on(方法名,callback(接收数据)),此时 callback 函数中的 this 已经发生改变,可以使用箭头函数&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;路由之间的跳转&quot;&gt;路由之间的跳转&lt;/h2&gt;

&lt;p&gt;声明方式(标签跳转)&lt;/p&gt;

&lt;p&gt;编程式(js 跳转)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;用 query 传参数 优势: 页面刷新,参数不会丢失 劣势: 参数暴露&lt;/li&gt;
  &lt;li&gt;密文传输 用 params 替换 query 优势:参数没有暴露 劣势: 页面刷新,参数丢失&lt;/li&gt;
  &lt;li&gt;路由配置里用冒号的形式传参&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;vuecli-怎样使用自定义的组件有遇到过哪些问题呢&quot;&gt;vue.cli 怎样使用自定义的组件?有遇到过哪些问题呢?&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;在 components 目录中新建你的组件文件(indexPage.vue),script 一定要 export default{}&lt;/li&gt;
  &lt;li&gt;在需要用的页面(组件)中导入:import indexPage from ‘@/components/indexPage.vue’&lt;/li&gt;
  &lt;li&gt;注入到 vue 中的子组件的 comonents 属性上面,components:{indexPage}&lt;/li&gt;
  &lt;li&gt;在 template 视图 view 中使用,例如有 indexPage 中使用,例如 indexPage 命名,使用的时候则 index-page&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;vue-如何实现按需加载配合-webpack-配置&quot;&gt;Vue 如何实现按需加载配合 webpack 配置&lt;/h2&gt;

&lt;p&gt;webpack 中提供了 require.ensure()来实现按需加载. 以前引入路由是通过 import 这样的方式引入,改为 const 定义的方式进行引入&lt;/p&gt;

&lt;p&gt;不进行页面按需加载引入方式: import home from ‘../../common/home.vue’&lt;/p&gt;

&lt;p&gt;进行页面按需加载的引入方式: const home = r =&amp;gt; require.ensure([],()=&amp;gt;r(require(‘../../common/home.vue’)))&lt;/p&gt;

&lt;h2 id=&quot;vuex-是什么怎么使用哪种功能场景使用它&quot;&gt;Vuex 是什么?怎么使用?哪种功能场景使用它?&lt;/h2&gt;

&lt;p&gt;vuex 是 vue 框架中的状态管理.在 main.js 中引入 store,注入.新建一个目录 store,…export.场景有: 单页面应用中,组件之间的状态. 音乐播放器,登录状态,加入购物车&lt;/p&gt;

&lt;h2 id=&quot;vuex-有哪几种属性&quot;&gt;Vuex 有哪几种属性?&lt;/h2&gt;

&lt;p&gt;有五种, 分别是 State, Getter, Mutation, Action, Module&lt;/p&gt;

&lt;h2 id=&quot;vuex-的-state-特性&quot;&gt;Vuex 的 State 特性&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Vuex 就是一个仓库,仓库里面放了很多对象. 其中 state 就是数据源存放地, 对应一般 Vue 对象里面的 data&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;state 里面存放的数据是响应式的, Vue 组件从 state 中读取数据, 若是 store 中的数据发生改变, 依赖这个数据的组件也会发生更新&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;它通过 mapState 把全局的 state 和 getters 映射到当前组件的 computed 计算属性中&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;vuex-的-getter-特性&quot;&gt;Vuex 的 Getter 特性&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;getter 可以对 State 进行计算操作,它就是 Store 计算属性&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;虽然在组件内也可以做计算属性,但是 getter 可以在多组件之间复用&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;如果一个状态只在一个组件内使用,是可以不用 getter&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;vuex-的-mutation-特性&quot;&gt;Vuex 的 Mutation 特性&lt;/h2&gt;

&lt;p&gt;Action 类型于 Mutation, 不同于: Action 提交的是 Mutation, 而不是直接变更状态; Action 可以包含任意异步操作&lt;/p&gt;

&lt;h2 id=&quot;不用-vuex-带来什么问题&quot;&gt;不用 Vuex 带来什么问题?&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;可维护性下降,想修改数据要修改三个地方&lt;/li&gt;
  &lt;li&gt;可读性下降,因为一个组件里的数据,根本就看不出来从哪来的&lt;/li&gt;
  &lt;li&gt;增加耦合性,大量的上传派发,会让耦合性打打增加,本来 Vue 用 Component 就是为了减少耦合,现在这么用,就违背了组件化的初衷&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;v-show-和-v-if-指令的共同点和不同点&quot;&gt;v-show 和 v-if 指令的共同点和不同点&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;v-show 指令是通过修改元素的 display 的 css 属性让其显示或隐藏&lt;/li&gt;
  &lt;li&gt;v-if 指令是直接销毁和重建 DOM 达到让元素显示和隐藏的效果&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;如何让-css-只在当前组件中起作用&quot;&gt;如何让 CSS 只在当前组件中起作用&lt;/h2&gt;

&lt;p&gt;将当前组件的&amp;lt;style&amp;gt;修改为&amp;lt;style scoped&amp;gt;&lt;/p&gt;

&lt;h2 id=&quot;keep-alivekeep-alive的作用是什么&quot;&gt;&amp;lt;keep-alive&amp;gt;&amp;lt;/keep-alive&amp;gt;的作用是什么?&lt;/h2&gt;

&lt;p&gt;&amp;lt;keep-alive&amp;gt;&amp;lt;/keep-alive&amp;gt;包裹动态组件时,会缓存不活动的组件实例,主要用于保留组件状态或避免重新渲染&lt;/p&gt;

&lt;h2 id=&quot;指令-v-el-的作用是什么&quot;&gt;指令 v-el 的作用是什么?&lt;/h2&gt;

&lt;p&gt;提供一个页面中已存在的 DOM 元素作为 vue 实例的挂载目标,可以是 css 选择器,也可以是一个 HTMLElement 实例&lt;/p&gt;

&lt;h2 id=&quot;请列举出-3-个-vue-中常用的生命周期钩子函数&quot;&gt;请列举出 3 个 Vue 中常用的生命周期钩子函数?&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;created: 实例已经创建完成之后调用,在这一步,实例已经完成数据观测,属性和方法的运算, watch/event 事件回调. 但是, 挂载阶段还没有开始,$el 属性目前还不可见&lt;/li&gt;
  &lt;li&gt;mounted: el 被新创建的 vm.$el替换,并且挂载在实例上去之后调用该钩子. 如果root实例挂载了一个文档内部元素,当mounted被调用是vm.$el 也在文档中&lt;/li&gt;
  &lt;li&gt;activated: keep-alive 组件激活时调用&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;active-class-是那个组件的属性&quot;&gt;active-class 是那个组件的属性&lt;/h2&gt;

&lt;p&gt;vue-router 模块的 router-link 组件&lt;/p&gt;

&lt;h2 id=&quot;vue-router-中的导航钩子&quot;&gt;Vue-router 中的导航钩子&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;全局导航钩子:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;前置守卫:&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;    &lt;span class=&quot;nx&quot;&gt;router&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;beforeEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{})&lt;/span&gt;
    
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;后置守卫&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;    &lt;span class=&quot;nx&quot;&gt;router&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;afterEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{})&lt;/span&gt;
    
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;作用：跳转前进行判断拦截&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;路由独享的钩子: 在 routes 数组的对象的里 beforeEnter:(to,from,next) =&amp;gt;{}&lt;/li&gt;
  &lt;li&gt;组件内的导航钩子: 在组件内可以使用 beforeRouteEnter,beforeRouteUpdate,beforeRouteLeave(to,from,next){}&lt;/li&gt;
  &lt;li&gt;beforeRouteEnter 中没有 this 其他的是有 this 的&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;生命周期的八个阶段&quot;&gt;生命周期的八个阶段&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;beforeCreate 阶段: vue 实例挂载元素 el 和数据对象 data 都为 undefined,还未初始化&lt;/li&gt;
  &lt;li&gt;created 阶段: vue 实例的数据对象 data 有了,el 还没有&lt;/li&gt;
  &lt;li&gt;beforeMount 阶段: vue 实例的$el 和 data 都初始化了,但还是挂载之前为虚拟的 DOM 节点,data.message 还未替换&lt;/li&gt;
  &lt;li&gt;mounted 阶段: vue 实例挂载完成,data.message 成功渲染&lt;/li&gt;
  &lt;li&gt;beforeUpdate/updated: 在 data 变化时,都会触发&lt;/li&gt;
  &lt;li&gt;beforeDestroy/destroyed:销毁&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;vue-的双向数据绑定原理是什么&quot;&gt;Vue 的双向数据绑定原理是什么?&lt;/h2&gt;

&lt;p&gt;vue.js 是采用数据劫持结合发布者-订阅者模式,通过 Object.defineProperty()来劫持各个属性的 setter、getter,在数据变动时发布消息给订阅者,触发相应的监听回调&lt;/p&gt;

&lt;h2 id=&quot;axios-的优点&quot;&gt;axios 的优点?&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;可以设置拦截请求和响应&lt;/li&gt;
  &lt;li&gt;自动转换 json 请求和响应&lt;/li&gt;
  &lt;li&gt;支持 promise 和 api&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;插槽&quot;&gt;插槽&lt;/h2&gt;

&lt;p&gt;默认插槽 &amp;lt;slot&amp;gt;&amp;lt;/slot&amp;gt;&lt;/p&gt;

&lt;p&gt;具名插槽: 给插槽起个名字 &amp;lt;slot name=”girl”&amp;gt;&amp;lt;/slot&amp;gt;&lt;/p&gt;

&lt;p&gt;作用域插槽: 就是组件上的属性,可以在组件元素内部使用(element 的 table) slot-scope=”a”&lt;/p&gt;

&lt;h2 id=&quot;自定义指令&quot;&gt;自定义指令&lt;/h2&gt;

&lt;p&gt;directive 自定义指令池&lt;/p&gt;

&lt;h2 id=&quot;history-和-hash-的区别&quot;&gt;history 和 hash 的区别&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;hash 带#,history 没有&lt;/li&gt;
  &lt;li&gt;history 相对比较新,只能兼容 ie10, hash 能兼容 ie8&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;跳转的时候 hash 只能修改#后面的内容,而 history 只要是同源的就可以&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;原理:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;hash: 通过监听浏览器的 onhashchange()事件变化,查看对应的路由规则&lt;/li&gt;
      &lt;li&gt;history: 利用 H5 的 history 中新增的两个 API pushState()和 replaceState()和一个事件 onpopstate 监听 URL 变化&lt;/li&gt;
      &lt;li&gt;pushState()和 replaceState()可以用于浏览器的历史记录栈,通过 back、forward、go 可以对当前浏览器进行修改,当他们发生修改的时候,尽管 url 变化了,
但是不会立即向后端服务器发送请求,除非点击刷新&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;总结:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;1.history 和 hash 一般来说都能用,history 更美观&lt;/li&gt;
      &lt;li&gt;2.history 修改更自由&lt;/li&gt;
      &lt;li&gt;3.两个原理差不多都是通过事件监听,一个是 onhashchange(),另一个是 onpopstate()&lt;/li&gt;
      &lt;li&gt;4.history 必须要和后端保持一致,路由全覆盖,不然容易报 404&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;vue-组件通信之-bus&quot;&gt;Vue 组件通信之 Bus&lt;/h2&gt;

&lt;p&gt;通过事件中心,允许组件自由交流,无论组件处于组件树的哪一层,由于 Vue 实例实现了一个事件分发接口,你可以通过实例话一个空的 Vue 实例来实现这个目的.这个集中式的事件中间件就是 Bus&lt;/p&gt;

&lt;p&gt;将 bus 定义到全局:main.js&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;eventBus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;install&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Vue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;Vue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$bus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;vue&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;Vue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;eventBus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;在组件中,使用$emit,$on,$off 分别来分发,监听,取消监听事件:&lt;/p&gt;

&lt;p&gt;分发事件的组件&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nx&quot;&gt;methods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;todo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$bus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$emit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;todoSth&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//params 是传递的参数&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;监听的组件&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nx&quot;&gt;created&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$bus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;todoSth&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//获取传递的参数并进行操作&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//todo something&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 最好在组件销毁前&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 清除事件监听&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;beforeDestroy&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$bus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$off&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;todoSth&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>Tomiyzz Zhou</name><email>zzl180520@163.com</email></author><category term="mathjax" /><summary type="html">巩固 VUE 2.0 的知识点</summary></entry><entry><title type="html">地址栏输入URL后发生了什么</title><link href="http://localhost:4000/2021/11/16/url/" rel="alternate" type="text/html" title="地址栏输入URL后发生了什么" /><published>2021-11-16T12:00:00+08:00</published><updated>2021-11-16T12:00:00+08:00</updated><id>http://localhost:4000/2021/11/16/url</id><content type="html" xml:base="http://localhost:4000/2021/11/16/url/">&lt;p class=&quot;message&quot;&gt;地址栏输入 URL 后发生了什么&lt;/p&gt;

&lt;h2 id=&quot;地址栏输入-url-后发生了什么&quot;&gt;地址栏输入 Url 后发生了什么?&lt;/h2&gt;

&lt;p&gt;有 URL 解析,DNS 查询,TCP 连接,HTTP 请求,响应请求和页面渲染&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;URL 解析: 先判断你输入的是一个合法的 URL,还是一个待搜索的关键字,进行对应操作&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;DNS 查询: 获取到域名对应服务器 IP 地址&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;查询浏览器缓存&lt;/li&gt;
      &lt;li&gt;检查系统缓存(检查 host 文件)&lt;/li&gt;
      &lt;li&gt;检查路由器缓存&lt;/li&gt;
      &lt;li&gt;查询 ISP DNS 缓存(本地服务器缓存)&lt;/li&gt;
      &lt;li&gt;递归查询(根域名服务器 -&amp;gt; 顶级域名服务器 -&amp;gt; 极限域名服务器 依次搜索对应目标的 IP)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;TCP 连接: 三次握手建立 TCP 连接&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;第一次握手: 客户端向服务端发送请求(SYN=1)等待服务器确认&lt;/li&gt;
      &lt;li&gt;第二次握手: 服务器收到请求并确认,回复一个指令(SYN=1,ACK=1)&lt;/li&gt;
      &lt;li&gt;第三次握手: 客户端收到服务器的回复指令并返回确认(ACK=1)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;请求和传输数据&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;浏览器渲染页面&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;浏览器解析 html 源码,创建 DOM 树&lt;/li&gt;
      &lt;li&gt;浏览器解析 CSS 代码,计算出最终的样式数据,形成 css 对象模型 CSSOM&lt;/li&gt;
      &lt;li&gt;利用 DOM 和 CSSOM 构建一个渲染树,&lt;/li&gt;
      &lt;li&gt;浏览器根据渲染树直接把页面会知道屏幕上&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>Tomiyzz Zhou</name><email>zzl180520@163.com</email></author><category term="mathjax" /><summary type="html">地址栏输入 URL 后发生了什么</summary></entry><entry><title type="html">VUE 3.0 的学习</title><link href="http://localhost:4000/2021/11/16/vue3.0-study/" rel="alternate" type="text/html" title="VUE 3.0 的学习" /><published>2021-11-16T12:00:00+08:00</published><updated>2021-11-16T12:00:00+08:00</updated><id>http://localhost:4000/2021/11/16/vue3.0-study</id><content type="html" xml:base="http://localhost:4000/2021/11/16/vue3.0-study/">&lt;p class=&quot;message&quot;&gt;VUE 3.0 的学习&lt;/p&gt;

&lt;h2 id=&quot;vue3-带来了什么&quot;&gt;Vue3 带来了什么?&lt;/h2&gt;

&lt;h4 id=&quot;性能提升&quot;&gt;性能提升&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;打包大小减少 41%&lt;/li&gt;
  &lt;li&gt;初次渲染快 55%,更新渲染快 133%&lt;/li&gt;
  &lt;li&gt;内存减少 54%&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;源码升级&quot;&gt;源码升级&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;使用 Proxy 代替 defineProperty 实现响应式&lt;/li&gt;
  &lt;li&gt;重写虚拟 DOM 的实现和 Tree-Shaking&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;拥抱-typescript&quot;&gt;拥抱 Typescript&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;vue3 可以更好的支持 Typescript&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;新的特性&quot;&gt;新的特性&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Composition(组合 API)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;setup 配置&lt;/li&gt;
      &lt;li&gt;ref 和 reactive&lt;/li&gt;
      &lt;li&gt;watch 和 watchEffect&lt;/li&gt;
      &lt;li&gt;provide 和 inject&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;初始-setup&quot;&gt;初始 setup&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;理解: vue3.0 中一个新的配置项,值为一个函数&lt;/li&gt;
  &lt;li&gt;setup 是所有 Composition API(组合 API)“表演的舞台”&lt;/li&gt;
  &lt;li&gt;组件中所用到的: 数据,方法等,均要配置在 setup 中.&lt;/li&gt;
  &lt;li&gt;setup 函数的两种返回值:
    &lt;ul&gt;
      &lt;li&gt;若返回一个对象,则对象中的属性,方法,在模版中均可以直接使用&lt;/li&gt;
      &lt;li&gt;若返回一个渲染函数: 则可以自定义渲染内容&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;vue2 和 vue3 不要混用,vue3 的优先级更高&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;ref-函数&quot;&gt;ref 函数&lt;/h2&gt;

&lt;p&gt;引入 ref 函数&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;import {ref} from ‘vue’&lt;/li&gt;
  &lt;li&gt;ref 引用对象 修改的时候需要 .value 进行修改&lt;/li&gt;
  &lt;li&gt;作用: 定义一个响应式的数据&lt;/li&gt;
  &lt;li&gt;语法: const xxx = ref(initValue)
    &lt;ul&gt;
      &lt;li&gt;创建一个包含响应式数据的引用对象 (reference 对象,简称 ref 对象)&lt;/li&gt;
      &lt;li&gt;JS 中操作数据: xxx.value&lt;/li&gt;
      &lt;li&gt;模版中读取数据: 不需要.value,直接: &amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;备注:
    &lt;ul&gt;
      &lt;li&gt;接收的数据可以是基本类型,也可以是对象类型&lt;/li&gt;
      &lt;li&gt;基本类型的数据: 响应式依然是靠 Object.defineProperty()的 get 与 set 完成的&lt;/li&gt;
      &lt;li&gt;对象类型的数据: 内部“求助”了 Vue3.0 中的一个新函数–reactive 函数&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;reactive-函数&quot;&gt;Reactive 函数&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;import {reactive} from ‘vue’&lt;/li&gt;
  &lt;li&gt;作用: 定义一个&lt;strong&gt;对象类型&lt;/strong&gt;类型的响应式函数(基本类型不要用它,用 ref 函数)&lt;/li&gt;
  &lt;li&gt;语法: &lt;strong&gt;const 代理对象=reactive(源对象)&lt;/strong&gt;接收一个对象(或数组),返回一个代理对象(proxy 的实例对象,简称 Proxy 对象)&lt;/li&gt;
  &lt;li&gt;reactive 定义的响应式数据是“深层次的”&lt;/li&gt;
  &lt;li&gt;内部基于 ES6 的 Proxy 实现,通过代理对象操作源对象内部数据进行操作&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;vue30-的响应式&quot;&gt;Vue3.0 的响应式&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;实现原理:
    &lt;ul&gt;
      &lt;li&gt;通过 Proxy(代理): 拦截对象中任意属性的变化, 包括: 属性值的读写,属性的添加,属性的删除等&lt;/li&gt;
      &lt;li&gt;通过 Reflect(反射): 对源对象的属性进行操作&lt;/li&gt;
      &lt;li&gt;MDN 文档中描述的 Proxy 与 Reflect&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Proxy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 拦截读取属性值&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Reflect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 拦截设置属性值或添加新属性值&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Reflect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;deleteProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Reflect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;deleteProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;reactive-和-ref-的对比&quot;&gt;reactive 和 ref 的对比&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;从定义数据角度对比&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;ref 用来定义: 基本类型数据&lt;/li&gt;
      &lt;li&gt;reactive 用来定义: 对象(或数组)类型数据
        &lt;blockquote&gt;
          &lt;p&gt;备注: ref 也可以用来定义对象(或数组)类型数据,它内部会自动通过 reactive 转为代理对象&lt;/p&gt;
        &lt;/blockquote&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;从原理角度对比:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;ref 通过 Object.defineProperty()的 get 与 set 来实现响应式(数据劫持)&lt;/li&gt;
      &lt;li&gt;reactive 通过使用 Proxy 来实现响应式(数据劫持),并通过 Reflect 操作&lt;strong&gt;源对象&lt;/strong&gt;内部的数据&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;从使用角度对比&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;ref 定义的数据: 操作数据需要 .value, 读取数据时模版中直接读取不需要 .value&lt;/li&gt;
      &lt;li&gt;reactive 定义的数据: 操作数据与读取数据:均不需要 .value&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;setup-的两个注意点&quot;&gt;setup 的两个注意点&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;setup 执行世纪&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;在 beforeCreate 之前执行一次,this 是 undefined&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;setup 的参数:&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;props: 值为对象, 包含:组件外部传递过来,且组件内部声明接收了的属性&lt;/li&gt;
      &lt;li&gt;context:上下文对象
        &lt;ul&gt;
          &lt;li&gt;attrs: 值为对象, 包含:组件外部传递过来, 但没有在 props 配置中声明的属性,相当于&lt;strong&gt;this.$attrs&lt;/strong&gt;&lt;/li&gt;
          &lt;li&gt;slots: 收到的插槽内容, 相当于&lt;strong&gt;this.$slots&lt;/strong&gt;&lt;/li&gt;
          &lt;li&gt;emit: 分发自定义事件的函数,相当于&lt;strong&gt;this.$emit&lt;/strong&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;计算属性与监视&quot;&gt;计算属性与监视&lt;/h2&gt;

&lt;h3 id=&quot;computed-函数&quot;&gt;computed 函数&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;与 vue2.0 中 computed 配置功能一致&lt;/li&gt;
  &lt;li&gt;写法&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;  &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;computed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;vue&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 简写&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fullName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;computed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;......&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 完整&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fullName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;computed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;firstName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lastName&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;......&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;watch-函数&quot;&gt;watch 函数&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;与 vue2.0 中 watch 配置功能一致&lt;/li&gt;
  &lt;li&gt;写法:&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;  &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;watch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;vue&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// 情况一: 监视 ref 所定义的一个响应式数据&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;watch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;newVal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;oldVal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;sum 数据变了&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;newVal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;oldVal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;immediate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// 情况二: 监视 ref 所定义的多个响应式数据&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;watch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;newVal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;oldVal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 两个数组&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;sum 或 msg 数据变了&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;newVal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;oldVal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// 情况三: 监视 reactive 所定义的一个响应式数据的全部属性&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 1. 注意: 此处无法正确的获取 pldValue&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 2. 注意: 强制开启了深度监视(deep 配置无效)&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;watch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;newVal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;oldVal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;person 变化了&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// 情况四: 监视 reactive 所定义的一个响应式数据中的某个属性&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;watch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;newVal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;oldVal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;person 的 age 变化了&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// 情况五: 监视 reactive 所定义的一个响应式数据中的某些属性&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;watch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;newVal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;oldVal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;person 的 age 变化了&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// 特殊情况 此处由于监视的是 reactive 所定义的对象中的某个属性,所以 deep 配置有效&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;watch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;job&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;newVal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;oldVal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;person 的 job 变化了&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;deep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

  
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;watch-的-value-问题&quot;&gt;watch 的 .value 问题&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;ref 存放基本类型的值, watch 监听不需要用 .value&lt;/li&gt;
  &lt;li&gt;ref 存放对象类型,watch 监听不能进行深度监听
    &lt;ul&gt;
      &lt;li&gt;使用.value&lt;/li&gt;
      &lt;li&gt;使用 {{deep:true}} 开启深度监听&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;watcheffect-函数&quot;&gt;watchEffect 函数&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;watch 的套路是: 既要指明监视的属性,也要指明监视的回调&lt;/li&gt;
  &lt;li&gt;watchEffect 的套路是: 不用指明监视哪个属性,监视的回调中用到哪个属性,那就监视哪个属性&lt;/li&gt;
  &lt;li&gt;watchEffect 有点像 computed:
    &lt;ul&gt;
      &lt;li&gt;但 computed 注重的计算出来的值(回调函数的返回值),所以必须要写回调&lt;/li&gt;
      &lt;li&gt;而 watchEffect 更注重的是过程(回调函数的函数体),所以不能写返回值&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;用到什么就监视什么&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nx&quot;&gt;watchEffect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;job&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;salary&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>Tomiyzz Zhou</name><email>zzl180520@163.com</email></author><category term="mathjax" /><summary type="html">VUE 3.0 的学习</summary></entry><entry><title type="html">前端工程化</title><link href="http://localhost:4000/2021/11/02/web-engineering/" rel="alternate" type="text/html" title="前端工程化" /><published>2021-11-02T12:00:00+08:00</published><updated>2021-11-02T12:00:00+08:00</updated><id>http://localhost:4000/2021/11/02/web-engineering</id><content type="html" xml:base="http://localhost:4000/2021/11/02/web-engineering/">&lt;p class=&quot;message&quot;&gt;学习 前端工程化 的历程&lt;/p&gt;

&lt;h2 id=&quot;前端工程化是什么&quot;&gt;前端工程化是什么?&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;前端工程化就是通过各种工具和技术,提升前端开发效率的过程&lt;/p&gt;

    &lt;p&gt;(1.项目上线前,代码需要压缩 2.想要使用 ES6+或 CSS3 新特性,要解决兼容性问题 3.想要使用 Less 增强 Css 的编程性,但是浏览器不能直接支持 Less 4.多人协作开发)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;前端工程化的内容:各种工具和技术&lt;/li&gt;
      &lt;li&gt;前端工程化的作用:通过使用工具,提升开发效率&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;一个工程的生命周期&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;工程立项-&amp;gt;需求分析-&amp;gt;产品原型-&amp;gt;开发实施-&amp;gt;测试部署-&amp;gt;上线运行&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;前端工程还包括的内容&quot;&gt;前端工程还包括的内容&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;脚手架工具: 1. 专用脚手架 (vue-cli, create-react-app, angular-cli, gatsby-cli) 2. 通用脚手架 (Yeoman, Plop)&lt;/li&gt;
  &lt;li&gt;自动化构建: npm script &amp;amp; script hooks Grunt, Gulp, FIS&lt;/li&gt;
  &lt;li&gt;模块化打包: Webpack, Rollup, Parcel&lt;/li&gt;
  &lt;li&gt;标准化规范: ESLint, StyleLint, Prettier&lt;/li&gt;
  &lt;li&gt;自动化测试: Mocha, Jest, Enzyme, Cypress, Nightmare, Puppeteer&lt;/li&gt;
  &lt;li&gt;自动化部署: Git Hook, Lint-staged, CI/CD&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;yeoman-的基本概念&quot;&gt;Yeoman 的基本概念&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Yeoman 是一款脚手架工具
    &lt;ul&gt;
      &lt;li&gt;可以帮助开发人员创建项目的基础结构代码&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;yo 是 Yeoman 的命令行管理工具
    &lt;ul&gt;
      &lt;li&gt;可以在命令行运行 Yeoman 的命令&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;生成器: Yeoman 中具体的脚手架
    &lt;ul&gt;
      &lt;li&gt;正对不同项目有不同的脚手架(例如:网站,APP,小程序等)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>Tomiyzz Zhou</name><email>zzl180520@163.com</email></author><category term="mathjax" /><summary type="html">学习 前端工程化 的历程</summary></entry><entry><title type="html">Webpack Study</title><link href="http://localhost:4000/2021/10/21/webpack-study/" rel="alternate" type="text/html" title="Webpack Study" /><published>2021-10-21T12:00:00+08:00</published><updated>2021-10-21T12:00:00+08:00</updated><id>http://localhost:4000/2021/10/21/webpack-study</id><content type="html" xml:base="http://localhost:4000/2021/10/21/webpack-study/">&lt;p class=&quot;message&quot;&gt;学习 Webpack 的历程&lt;/p&gt;

&lt;h2 id=&quot;webpack-介绍&quot;&gt;Webpack 介绍&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webpack.docschina.org/&quot;&gt;地址&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Webpack 是一种前端资源构建工具(不能直接解析 less,等),一个静态模块打包器(module bundler).&lt;/p&gt;

&lt;p&gt;在 Webpack 看来,前端的所有资源文件(js/json/css/img/less/…)都会作为模块处理.&lt;/p&gt;

&lt;p&gt;它将根据模块的依赖关系进行静态分析,打包生成对应的静态资源(bundle)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;静态模块打包器:根据入口文件的依赖关系,将资源全部引进来,生成 chunk(代码块),然后根据 chunk 根据不同的资源进行不同的处理,进行打包,输出出去的文件叫 bundle&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;webpack-五个核心概念&quot;&gt;Webpack 五个核心概念&lt;/h2&gt;

&lt;h3 id=&quot;entry&quot;&gt;Entry&lt;/h3&gt;

&lt;p&gt;入口(Entry) 指示 Webpack 以那个文件为入口为入口起点开始打包,分析构建内部依赖图&lt;/p&gt;

&lt;h3 id=&quot;output&quot;&gt;Output&lt;/h3&gt;

&lt;p&gt;输出(Output) 指示 Webpack 打包后的资源 bundles 输出到哪里去,以及如何命名&lt;/p&gt;

&lt;h3 id=&quot;loader&quot;&gt;Loader&lt;/h3&gt;

&lt;p&gt;Loader 让 Webpack 能够去处理那些非 JaceScript 文件 (webpack 自身只理解 JavaScript,将 css,img 翻译成 js)&lt;/p&gt;

&lt;h3 id=&quot;plugins&quot;&gt;Plugins&lt;/h3&gt;

&lt;p&gt;插件(Plugins) 可以用于执行范围更广的任务,插件的范围包括,从打包优化和压缩,一直到重新定义环境中的变量等&lt;/p&gt;

&lt;h3 id=&quot;mode&quot;&gt;Mode&lt;/h3&gt;

&lt;p&gt;模式(Mode) 指示 Webpack 使用相应模式的配置&lt;/p&gt;

&lt;h2 id=&quot;初体验&quot;&gt;初体验&lt;/h2&gt;

&lt;p&gt;创建 build 文件夹, 创建 src 文件夹,在里面创建 index.js 文件&lt;/p&gt;

&lt;p&gt;index.js 作为 webpack 入口起点文件&lt;/p&gt;

&lt;h3 id=&quot;运行指令&quot;&gt;运行指令&lt;/h3&gt;

&lt;p&gt;开发环境:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;webpack ./src/index.js -o ./build/built.js –mode=development&lt;/li&gt;
  &lt;li&gt;webpack 会以 ./src/index.js 为入口文件开始打包,打包后输出到 ./build/built.js&lt;/li&gt;
  &lt;li&gt;整体打包环境,是开发环境&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;生产环境:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;webpack ./src/index.js -o ./build/built.js –mode=production&lt;/li&gt;
  &lt;li&gt;webpack 会以 ./src/index.js 为入口文件开始打包,打包后输出到 ./build/built.js&lt;/li&gt;
  &lt;li&gt;整体打包环境,是生产环境&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;结论&quot;&gt;结论&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;webpack 能处理 js/json 文件,不能处理 css/img 等其他资源&lt;/li&gt;
  &lt;li&gt;生产环境和开发环境将 ES6 模块化编译成浏览器能识别的模块化&lt;/li&gt;
  &lt;li&gt;生产环境比开发环境多一个压缩 js 代码&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;打包样式资源&quot;&gt;打包样式资源&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;和 src 同级 创建 webpack.config.js 打包压缩 css 和 img 资源&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;ul&gt;
      &lt;li&gt;指示 webpack 做什么 (当运行的时候 webpack 指令时,会加载里面的配置)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;所有的构建工具都是基于 node 平台运行的 模块化默认采用 common.js&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;开发环境配置&quot;&gt;开发环境配置&lt;/h3&gt;

&lt;p&gt;运行项目指令&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;webpack 会将打包结果输出出去&lt;/li&gt;
  &lt;li&gt;npx webpack-dev-server 只会在内存中编译打包, 没有输出&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;HtmlWebpackPlugin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;html-webpack-plugin&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 打包 css 成一个单独的文件的插件&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MiniCssExtractPlugin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;mini-css-extract-plugin&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 压缩 css&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;OptimizeCssAssetsWebpackPlugin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;optimize-css-assets-webpack-plugin&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 设置 nodejs 环境变量&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NODE_ENV&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;development&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//webpack 配置&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//入口文件&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;entry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./src/index.js&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//输出&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//输出文件名&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;js/built.js&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//输出路径&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// \_\_dirname node.js 的变量,代表当前文件的目录绝对路径&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_dirname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loader的配置&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;rules&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 详细的 loader 配置&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 不同文件必须配置不同 loader 处理&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 匹配哪些文件&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\$&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//使用哪些 loader 进行处理&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// use 数组中 loader 执行顺序,从右到左,从下到上,依次执行&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 创建 style 标签,将 js 中的样式资源插入进去,添加到 head 中生效&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;style-loader&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;这个&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loader&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;取代&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;loader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;作用&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;提取&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;js&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;中的&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;css&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;成单独文件&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;MiniCssExtractPlugin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;loader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 将 css 文件变成 common.js 模块加载到 js 中,里面内容是样式字符串&lt;/span&gt;
&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;css-loader&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// css 兼容性处理: postcss -- &amp;gt; postcss-loader postcss-preset-env&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 帮 postcss 找到 package.json 中 browserslist 里面的配置,通过配置加载指定的 css 兼容性样式&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 使用 loader 的默认配置&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 'postcss-loader',&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 修改 loader 的配置&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;loader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;postcss-loader&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;ident&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;postcss&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// postcss 的插件&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;postcss-preset-env&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;less&amp;amp;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[&lt;/span&gt;
&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;style-loader&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;css-loader&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 需要下载 less-loader less&lt;/span&gt;
&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;less-loader&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 处理图片&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 默认处理不累 html 中 img 图片&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;jpg|png|gif&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)\$&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 下载 url-loader file-loader&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;loader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;url-loader&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//图片大小小于 8kb,就会被 base64 处理&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//优点:减少请求数量(减轻服务器压力)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//缺点:图片体积会更大(文件请求速度更慢)&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 问题:因为 url-loader 默认使用 es6 模块化解析,而 html-loader 引入图片是 commonjs&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 解析时会出问题: [object Module]&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 解决:关闭 url-loader 的 es6 模块化,使用 commonjs 解析&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;esModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;outputPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;imgs&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//给图片进行重命名&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//[hash:10] 取图片的 hash 原来的前 10 位&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//[ext]取文件拓展名&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;[hash:10].[ext]&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\$&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 处理 html 文件的 img 图片(负责引入 img,从而能被 url-loader 进行处理)&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;loader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;html-loader&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 打包其他资源&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 排除 css/js/html 资源&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;exclude&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;.(css|js|html|less)&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;$/,
loader:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;loader&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;,
options:{
name:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;,
outputPath:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;media&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;,
}
}
]
},
// plugins 的配置
plugins:[
// 详细 plugins 的配置

// 下载插件 html-webpack-plugin
// 功能: 默认会创建一个空的 html,自动引入打包输出的所有资源(JS/CSS)
// 需求:需要有结构的 HTML 文件
new HtmlWebpackPlugin(
{
// 复制&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt; 文件,并自动引入打包输出的所有资源(JS/CSS)
template:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;minify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 移除空格&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;collapseWhitespace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 移除注释&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;removeComments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MiniCssExtractPlugin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 对输出的 css 文件进行重命名&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;css/built.css&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 压缩 css optimize-css-assets-webpack-plugin&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;OptimizeCssAssetsWebpackPlugin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 模式&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;development&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 开发模式&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;production&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 开发服务器 devServer:用来自动化 (自动编译,自动打开浏览器,自动刷新浏览器)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 特点: 只会在内存中编译打包,不会有任何输出&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 启动 devServer 指令为: npx webpack-dev-server (需要下载 webpack-dev-server)&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;devServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 项目构建后的路径&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;contentBase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_dirname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 启动 gzip 压缩&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;compress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 端口号&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 自动打开浏览器&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;package.json 中 browserslist 里面的配置&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;browserslist&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 开发环境 --&amp;gt; 设置 node 环境变量:process.env.NODE_ENV = development&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;development&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;last 1 chrome version&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 兼容最近的一个 chrome 版本&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;last 1 firefox version&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 兼容最近的一个 firefox 版本&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;last 1 safari version&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 兼容最近的一个 safari 版本&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 生产环境: 默认是看生产环境&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;production&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;gt;0.2%&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;not dead&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;not op_mini all&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;js-的语法检查&quot;&gt;JS 的语法检查&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;语法检查: eslint-loader eslint&lt;/li&gt;
  &lt;li&gt;注意: 只检查自己写的源代码,第三方的库是不用检查的&lt;/li&gt;
  &lt;li&gt;设置检查规则 :
    &lt;ul&gt;
      &lt;li&gt;package.json 中 eslintConfig 中设置&lt;/li&gt;
      &lt;li&gt;airbnb –&amp;gt; eslint-config-airbnb-base eslint eslint-plugin-import&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;js&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\$&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;exclude&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;modules&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;loader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;eslint-loader&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 优先执行&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;enforce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;pre&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;fix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;package.json 中 eslintConfig 里面的配置 eslint&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;eslintConfig&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;extends&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;airbnb-base&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;// 下一行 eslint 所有规则都失效(下一行不进行 eslint 检查)&lt;/li&gt;
  &lt;li&gt;// eslint-disable-next-line&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;js-的兼容性处理&quot;&gt;js 的兼容性处理&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;babel-loader @babel/preset-env @babel/core&lt;/li&gt;
  &lt;li&gt;全部 js 兼容性处理: @babel/polyfill&lt;/li&gt;
  &lt;li&gt;需要兼容性处理的就做: 按需加载 –&amp;gt;core-js&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;js&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\$&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;exclude&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;modules&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;loader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;babel-loader&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;presets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;@babel/preset-env&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;useBuiltIns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;usage&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;corejs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 指定兼容性做到哪个版本浏览器&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;targets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;chrome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;firefox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;ie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;safari&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;edge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;js-的压缩&quot;&gt;js 的压缩&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;mode:production 时会自动进行压缩&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;webpack-性能优化介绍&quot;&gt;Webpack 性能优化介绍&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;开发环境性能优化&lt;/li&gt;
  &lt;li&gt;生产环境性能优化&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;开发环境性能优化--速度快调试更友好&quot;&gt;开发环境性能优化 : 速度快,调试更友好&lt;/h2&gt;

&lt;p&gt;速度快:(eval&amp;gt;line&amp;gt;cheap&amp;gt;…)&lt;/p&gt;

&lt;p&gt;eval-cheap-source-map&lt;/p&gt;

&lt;p&gt;eval-source-map&lt;/p&gt;

&lt;p&gt;调试更友好:source-map&lt;/p&gt;

&lt;p&gt;cheap-module-source-map&lt;/p&gt;

&lt;p&gt;cheap-source-map&lt;/p&gt;

&lt;p&gt;–&amp;gt; eval-source-map / eval-cheap-module-source-map&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;优化打包构建速度&lt;/p&gt;

    &lt;p&gt;/*&lt;/p&gt;

    &lt;p&gt;HMR : hot module replacement 热模块替换 / 模块热替换&lt;/p&gt;

    &lt;p&gt;作用:一个模块发生变化,只会重新打包这一个模块(而不是打包所有魔模块)&lt;/p&gt;

    &lt;p&gt;极大提升构建速度&lt;/p&gt;

    &lt;p&gt;样式文件:可以使用 HMR 功能:因为 style-loader 内部实现了&lt;/p&gt;

    &lt;p&gt;js 文件:默认不能使用 HMR 功能 –&amp;gt; 需要修改 js 代码,添加支持 HMR 功能的代码&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;注意:HMR 功能对 js 的处理,只能处理非入口 js 文件的其他文件.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;html 文件:默认不能使用 HMR 功能,同时会导致 html 文件不能热更新了(不用做 HMR 功能)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;解决:修改 entry 入口,将 html 文件引入&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;*/&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;  &lt;span class=&quot;nx&quot;&gt;devServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 开启 HMR 功能&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 当修改了 webpack 配置,新配置要想生效,必须要重新 webpack 服务&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;hot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;优化代码调试&lt;/p&gt;

    &lt;p&gt;source-map : 一种提供源代码到构建后代码映射 技术(如果构建代码出错,通过映射可以追踪代码错误)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;  &lt;span class=&quot;nx&quot;&gt;devServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;devtool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;source-map&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
  &lt;span class=&quot;cm&quot;&gt;/**
  source-map:外部 错误代码准确信息 和 源代码的错误位置
  inline-source-map:内联 1.只生成一个内联 source-map 2.错误代码准确信息 和 源代码的错误位置
  hidden-source-map:外部 1.错误代码的错误原因, 但是没有错误位置 不能追踪到源代码, 只能提示到构建后代码的错误位置
  eval-source-map:内联 1.每一个文件都生成对应的 source-map, 都在 eval 中 2.错误代码准确信息 和 源代码的错误位置
  nosurces-source-map:外部 1.错误代码准确信息, 但是没有任何源代码信息
  cheap-source-map:外部 1.错误代码准确信息 和 源代码的错误位置, 只能精确到行
  cheap-module-source-map:外部 1.错误代码准确信息 和 源代码的错误位置
  内联 和 外部 的区别: 1.外部生成了文件,内联没有 2. 内联构建速度更快
  **/&lt;/span&gt;
  
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;生产环境性能优化--源代码要不要隐藏-调试要不要更友好&quot;&gt;生产环境性能优化 : 源代码要不要隐藏? 调试要不要更友好&lt;/h2&gt;

&lt;p&gt;内联会让代码体积更大,所以在生产环境不同内联&lt;/p&gt;

&lt;p&gt;代码隐藏: nosurces-source-map 全部隐藏&lt;/p&gt;

&lt;p&gt;hidden-source-map 只隐藏源代码,会提示构建后代码错误信息&lt;/p&gt;

&lt;p&gt;调试友好: source-map&lt;/p&gt;

&lt;p&gt;–&amp;gt; source-map / cheap-module-source-map&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;优化打包构建速度&lt;/li&gt;
  &lt;li&gt;优化代码运行的性能&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;oneof&quot;&gt;oneOf&lt;/h2&gt;

&lt;p&gt;在 rules 里用 oneOf 数组包裹&lt;/p&gt;

&lt;p&gt;// 以下 loader 只会匹配一个&lt;/p&gt;

&lt;p&gt;// 注意: 不能有两个配置处理同一种类型文件 (同一个要提取出去)&lt;/p&gt;

&lt;h2 id=&quot;缓存&quot;&gt;缓存&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;babel 缓存: cacheDirectory:true&lt;/li&gt;
  &lt;li&gt;文件资源 缓存: hash: 每次 webpack 构建时会发生一个唯一的 hash 值
    &lt;ul&gt;
      &lt;li&gt;问题: 因为 js 和 css 同时使用一个 hash 值,如果重新打包,会导致所有缓存失效.(可能只改动一个文件)&lt;/li&gt;
      &lt;li&gt;chunkhash: 根据 chunk 生成的值.如果打包来源于同一个 chunk,那么 hash 值就一样
        &lt;ul&gt;
          &lt;li&gt;问题: js 和 css 的 hash 还是一样的? 因为 css 是在 js 中被引入的,所以同属于一个 chunk&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;contenthash: 根据文件的内容生成 hash 值,不同文件 hash 值一定不一样
        &lt;ul&gt;
          &lt;li&gt;–&amp;gt; 让代码上线运行缓存更好使用&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;tree-shaking&quot;&gt;tree shaking&lt;/h2&gt;

&lt;p&gt;目的:去除无用代码&lt;/p&gt;

&lt;p&gt;前提:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;ol&gt;
      &lt;li&gt;必须使用 ES6 模块化&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;ol&gt;
      &lt;li&gt;开启 production 环境
        &lt;ul&gt;
          &lt;li&gt;作用:减少代码体积&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;ol&gt;
      &lt;li&gt;在 package.json 中配置 “sideEffects”:false 所有代码都没有副作用(都可以进行 tree shaking)
        &lt;ul&gt;
          &lt;li&gt;问题: 可能会把 css / @babel/polyfill (副作用)文件干掉&lt;/li&gt;
          &lt;li&gt;“sideEffects”:[“&lt;em&gt;.css”,”&lt;/em&gt;.less”]&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;code-split-代码分割&quot;&gt;code split 代码分割&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;单入口:entry:’./src/js/index/js’,&lt;/li&gt;
  &lt;li&gt;多入口:
    &lt;ul&gt;
      &lt;li&gt;index:’./src/js/index/js’,&lt;/li&gt;
      &lt;li&gt;test:’./src/js/test.js’&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;可以将 node_modules 中代码单独打包一个 chunk 最终输出. 自动分析多入口 chunk 中,有没有公共的文件.如果有会打包成单独的一个 chunk&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;  &lt;span class=&quot;nx&quot;&gt;optimization&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;splitChunks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;chunks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;通过 js 代码,让某个文件单独打包成一个 chunk. import 动态导入语法,能将某个文件单独打包&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;  &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\*&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt; webpackChunkName: 'test' &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\*&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./test&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//eslint-disable-next-line&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;文件加载失败&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;懒加载和预加载&quot;&gt;懒加载和预加载&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c1&quot;&gt;// 在需要进行懒加载的地方使用: 当文件使用时才加载&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// webpackPrefetch: 预加载: 会在使用之前,提前加载 js 文件&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 正常加载是并行加载(同一时间加载多个文件) 预加载 等其他资源加载完毕,再偷偷加载资源&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\*&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt; webpackChunkName: 'test',webpackPrefetch: true &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\*&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./test&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(({&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;pwa-渐进式网络开发应用程序离线可访问&quot;&gt;PWA 渐进式网络开发应用程序(离线可访问)&lt;/h2&gt;

&lt;p&gt;workbox –&amp;gt; workbox-webpack-plugin&lt;/p&gt;

&lt;p&gt;import WorkboxWebpackPlugin = require(‘workbox-webpack-plugin’)&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nx&quot;&gt;在&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;WorkboxWebpackPlugin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;GenerateSW&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 帮助 serviceworker 快速启动&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 删除旧的 serviceworker&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 生成 serviceworker 配置文件&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;clientsClaim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;skipWaiting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;/ **&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;eslint 不认识 window,navigator 全局变量
解决:需要修改 package.json 中 eslintConfig 配置
“env”:{
“browser”:true // 支持浏览器端全局变量
}&lt;/li&gt;
  &lt;li&gt;sw 代码必须训醒在服务器上
–&amp;gt;nodejs
–&amp;gt;
node i serve -g
serve -s build 启动服务器,将 build 目录下所有资源作为静态资源暴露出去&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;** /&lt;/p&gt;

&lt;p&gt;// 注册 serviceWorker
// 处理兼容性问题&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;serviceWorker&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;navigator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;navigator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serviceWorker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;register&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;/service-worker.js&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;sw 注册成功了&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;sw 注册失败了&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;多进程打包&quot;&gt;多进程打包&lt;/h2&gt;

&lt;p&gt;npm i thread-loader -D&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 开启多进程打包&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 进程启动大概为 600ms,进程通信也有开销,&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 只有工作消耗时间比较长,才需要多进程打包&lt;/span&gt;
&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;thread-loader&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;loader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;babel-loader&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;externals&quot;&gt;externals&lt;/h2&gt;

&lt;p&gt;和 mode 同级&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nx&quot;&gt;externals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 拒绝被打包进去&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;jquery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;jQuery&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;需要手动在 index.js 中引入 cdn 中的包&lt;/p&gt;

&lt;h2 id=&quot;dll&quot;&gt;dll&lt;/h2&gt;

&lt;p&gt;// 使用 dll 技术对某些库(第三方的库:jquery,react,vue)进行单独打包
// 当运行 webpack 时,默认查找 webpack.config.js 配置文件
需求&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;entry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 最终打包生成的[name] --&amp;gt;jquery&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// ['jquery'] --&amp;gt; 要打包的库是 jquery&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;jquery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;jquery&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;fillname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;[name].js&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_dirname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;dll&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;[name]&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;_[hash]&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// 打包的库里面向外暴露出去的内容叫什么名字&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 打包生成一个 mainfest.json --&amp;gt;提供和 jquery 映射&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;webpack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DllPlugin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;[name]&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;_[hash]&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 映射库的暴露的内容名称&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_dirname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;dll/mainfest.json&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 输出文件路径名称&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;production&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;optimization&quot;&gt;optimization&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TerserWebpackPlugin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;terser-webpack-plugin&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 将当前模块的记录其他模块的 hash 单独打包为一个文件 runtime&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 解决:修改 a 文件导致 b 文件的 contenthash 变化&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;optimization&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;splitChunks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{},&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;runtimeChunk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;entrypoint&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`runtime - &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;entrypoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;minimizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 配置生产环境的压缩方案:js 和 css&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TerserWebpackPlugin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 开启缓存&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 开启多进程打包&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;parallel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 启动 source-map&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;sourceMap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>Tomiyzz Zhou</name><email>zzl180520@163.com</email></author><category term="mathjax" /><summary type="html">学习 Webpack 的历程</summary></entry><entry><title type="html">Uniapp Study</title><link href="http://localhost:4000/2021/09/29/uniapp-study/" rel="alternate" type="text/html" title="Uniapp Study" /><published>2021-09-29T12:00:00+08:00</published><updated>2021-09-29T12:00:00+08:00</updated><id>http://localhost:4000/2021/09/29/uniapp-study</id><content type="html" xml:base="http://localhost:4000/2021/09/29/uniapp-study/">&lt;p class=&quot;message&quot;&gt;学习 UniApp 的历程&lt;/p&gt;

&lt;h2 id=&quot;uni-app-介绍&quot;&gt;uni-app 介绍&lt;/h2&gt;

&lt;p&gt;uni-app 是一个使用 Vue.js 开发所有前端应用的框架,开发者便携一套代码,可以发不到 iOS,安卓,H5,以及各个小程序等多个平台.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;具有 vue 和微信小程序的开发经验,可快速上手 uni-app&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;环境搭建&quot;&gt;环境搭建&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;1.安装编辑器 Hbuilderx &lt;a href=&quot;https://www.dcloud.io/hbuilderx.html&quot;&gt;下载地址&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;2.安装微信开发者工具 &lt;a href=&quot;https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html&quot;&gt;下载地址&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;运行微信开发者工具模拟器&quot;&gt;运行微信开发者工具模拟器&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;1.如果是第一次使用，需要先配置小程序 ide 的相关路径，才能运行成功。如下图，需在输入框输入微信开发者工具的安装路径。 若 HBuilderX 不能正常启动微信开发者工具，需要开发者手动启动，然后将 uni-app 生成小程序工程的路径拷贝到微信开发者工具里面，在 HBuilderX 里面开发，在微信开发者工具里面就可看到实时的效果。
&lt;img src=&quot;https://bjetxgzv.cdn.bspapp.com/VKCEYUGU-uni-app-doc/a142b6a0-4f1a-11eb-8a36-ebb87efcf8c0.png&quot; alt=&quot;alt&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;2.微信小程序的 &lt;strong&gt;设置 –&amp;gt; 安全 –&amp;gt; 服务窗口 开启&lt;/strong&gt; 不开启会报错&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;运行到手机模拟器&quot;&gt;运行到手机模拟器&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;1.手机数据线和电脑连接,下载包&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;为了实现多端兼容综合考虑编译速度uni-app-约定了如下开发规范&quot;&gt;为了实现多端兼容,综合考虑编译速度,uni-app 约定了如下开发规范&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;1.页面文件遵循 &lt;strong&gt;Vue 单文件组建(SFC)规范&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;2.组件标签靠近小程序规范&lt;/li&gt;
  &lt;li&gt;3.接口能力(JS API)靠近微信小程序规范,但需要将前缀 &lt;strong&gt;wx&lt;/strong&gt; 替换成 &lt;strong&gt;uni&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;4.数据绑定及事件处理同 &lt;strong&gt;Vue.js&lt;/strong&gt; 规范,同时补充了 App 及页面的生命周期&lt;/li&gt;
  &lt;li&gt;5.为兼容多端运行,建议使用 &lt;strong&gt;flex 布局&lt;/strong&gt; 进行开发&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;uni-app-全局配置&quot;&gt;uni-app 全局配置&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;1.在文件&lt;strong&gt;&lt;em&gt;pages.json&lt;/em&gt;&lt;/strong&gt;
    &lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;属性&lt;/th&gt;
      &lt;th&gt;类型&lt;/th&gt;
      &lt;th&gt;默认值&lt;/th&gt;
      &lt;th&gt;描述&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;navigationBarBackgroundColor&lt;/td&gt;
      &lt;td&gt;HexColor&lt;/td&gt;
      &lt;td&gt;#F7F7F7&lt;/td&gt;
      &lt;td&gt;导航栏背景颜色&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;navigationBarTextStyle&lt;/td&gt;
      &lt;td&gt;String&lt;/td&gt;
      &lt;td&gt;white&lt;/td&gt;
      &lt;td&gt;导航栏标题颜色及状态栏前景颜色 仅支持black/white&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;navigationBarTitleText&lt;/td&gt;
      &lt;td&gt;String&lt;/td&gt;
      &lt;td&gt;&lt;/td&gt;
      &lt;td&gt;导航栏标题文字内容&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;backgroundColor&lt;/td&gt;
      &lt;td&gt;HexColor&lt;/td&gt;
      &lt;td&gt;#ffffff&lt;/td&gt;
      &lt;td&gt;窗口背景颜色(需要在微信开发者工具中查看)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;backgroundTextStyle&lt;/td&gt;
      &lt;td&gt;String&lt;/td&gt;
      &lt;td&gt;dark&lt;/td&gt;
      &lt;td&gt;下拉loading的样式,仅支持dark/light&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;onReachBottomDistance&lt;/td&gt;
      &lt;td&gt;Number&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;页面上拉触底事件触发时距页面底部距离,单位只支持px(距离底部多少的时候,加载下一页的数据)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;通过-pages-来配置页面&quot;&gt;通过 pages 来配置页面&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;pages 的第一个对象就是初始页面&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;pages 的内部样式会覆盖全局样式&lt;/p&gt;
&lt;/blockquote&gt;

&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
        &lt;th&gt;属性&lt;/th&gt;
        &lt;th&gt;类型&lt;/th&gt;
        &lt;th&gt;默认值&lt;/th&gt;
        &lt;th&gt;描述&lt;/th&gt;
      &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td&gt;path&lt;/td&gt;
        &lt;td&gt;String&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;配置页面路径&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;style&lt;/td&gt;
        &lt;td&gt;Object&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;配置页面窗口表现&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote&gt;
  &lt;p&gt;在 pages 中,可以给 h5 或者 app-plus 单独设置样式&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;配置-tabbar-详情&quot;&gt;配置 tabbar (&lt;a href=&quot;https://uniapp.dcloud.io/collocation/pages?id=tabbar&quot;&gt;详情&lt;/a&gt;)&lt;/h2&gt;

&lt;p&gt;&lt;abbr&gt;如果应用是一个多 tab 应用,可以通过 tabBar 配置项指定 tab 栏的表现,以及 tab 切换时小时的对应项&lt;abbr&gt;&lt;/abbr&gt;&lt;/abbr&gt;&lt;/p&gt;

&lt;h3 id=&quot;tips&quot;&gt;Tips&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;1.当设置 position 为 top 时,将不会显示 icon (浏览器中不可以,只能在小程序中)&lt;/li&gt;
  &lt;li&gt;2.tabBar 中的 list 是一个数组,只能配置最少 2 个,最多 5 个 tab,tab 按数组的顺序排序&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;通过-condition-配置微信小程序详情页的启动模式&quot;&gt;通过 condition 配置微信小程序详情页的启动模式&lt;/h3&gt;

&lt;h1 id=&quot;组件的基本使用&quot;&gt;组件的基本使用&lt;/h1&gt;

&lt;h2 id=&quot;text-文本组件-行内元素&quot;&gt;text 文本组件 (行内元素)&lt;/h2&gt;

&lt;p&gt;属性:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;selectable :控制文本是否可选 默认 false&lt;/li&gt;
  &lt;li&gt;space :显示连续空格,可选参数:ensp,emsp,nbsp&lt;/li&gt;
  &lt;li&gt;decode :默认解码&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;view-组件-容器组件-相当于-html-中的-div&quot;&gt;view 组件 容器组件 (相当于 html 中的 div)&lt;/h2&gt;

&lt;p&gt;属性:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;hover-class :指定按下去的样式类&lt;/li&gt;
  &lt;li&gt;hover-stop-propagation :是否阻止本节点的祖先节点出现点击状态 (类似于阻止冒泡的效果)&lt;/li&gt;
  &lt;li&gt;hover-start-time :按住后多久出现点击状态 单位毫秒 默认值:50&lt;/li&gt;
  &lt;li&gt;hover-stay-time :手指松开后点击状态保留时间 单位毫秒&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;button-组件&quot;&gt;button 组件&lt;/h2&gt;

&lt;p&gt;属性&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;size&lt;/li&gt;
  &lt;li&gt;type :primary default warn&lt;/li&gt;
  &lt;li&gt;plain :镂空&lt;/li&gt;
  &lt;li&gt;disabled :禁用&lt;/li&gt;
  &lt;li&gt;loading : loading 效果&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;image-组件-图片组件&quot;&gt;image 组件 图片组件&lt;/h2&gt;

&lt;p&gt;属性&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;src 图片资源路径&lt;/li&gt;
  &lt;li&gt;mode :
    &lt;blockquote&gt;
      &lt;p&gt;aspectFit 保持纵横比缩放图片,使图片的长边完全显示出来
aspectFill 保持纵横比缩放图片,使图片的短边完全显示出来&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;uni-app-中的样式&quot;&gt;uni-app 中的样式&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;1.rpx 即响应式 px,一种根据屏幕宽度自适应的动态单位,以 750 宽的屏幕为基准,750rpx 恰好为屏幕宽度,屏幕变宽,rpx 实际显示效果会等比放大.&lt;/li&gt;
  &lt;li&gt;2.使用 &lt;strong&gt;&lt;em&gt;@import&lt;/em&gt;&lt;/strong&gt; 语句可以倒入外链样式表&lt;/li&gt;
  &lt;li&gt;3.在 uni-app 中可以使用基本的选择器&lt;/li&gt;
  &lt;li&gt;4.在 uni-app 中不能使用 &lt;strong&gt;*&lt;/strong&gt; 选择器&lt;/li&gt;
  &lt;li&gt;5.&lt;strong&gt;&lt;em&gt;page&lt;/em&gt;&lt;/strong&gt;相当于&lt;strong&gt;&lt;em&gt;body&lt;/em&gt;&lt;/strong&gt;节点&lt;/li&gt;
  &lt;li&gt;6.在 App.vue 中的样式为全局样式,作用于每一个页面,在 pages 目录下的 vue 文件中定义的样式为局部样式,只作用在对用的页面,会覆盖 App,vue 中相同的选择器&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;7.在 uni-app 中使用字体图标,使用方式和普通的 web 项目相同,需要注意:&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;字体文件小于 40kb,uni-app 会自动将其转化为 base64 格式&lt;/p&gt;
    &lt;/blockquote&gt;

    &lt;blockquote&gt;
      &lt;p&gt;字体文件大于 40kb,需开发者自己转换,否则使用将不生效&lt;/p&gt;
    &lt;/blockquote&gt;

    &lt;blockquote&gt;
      &lt;p&gt;字体文件的引用路径推荐使用以 &lt;strong&gt;&lt;em&gt;-@&lt;/em&gt;&lt;/strong&gt; 开头的绝对路径 (src:url(‘-@/static/….’))&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;uni-app-数据绑定-和-vue-的数据绑定相同&quot;&gt;uni-app 数据绑定 和 Vue 的数据绑定相同&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;在点击事件中传递事件对象,在方法中传入 $event&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;uni-app-中的生命生命周期&quot;&gt;uni-app 中的生命生命周期&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;应用的声明周期:&lt;/p&gt;

    &lt;p&gt;onLaunch: 全局只会触发一次&lt;/p&gt;

    &lt;p&gt;onShow:从后台进入前台显示&lt;/p&gt;

    &lt;p&gt;onHide:从前台进入后台&lt;/p&gt;

    &lt;p&gt;onError:报错时触发&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;页面的生命周期:&lt;/p&gt;

    &lt;p&gt;onLoad:监听页面加载,其参数为上个页面传递的数据,参数类型为 Object&lt;/p&gt;

    &lt;p&gt;onShow:监听页面显示,页面每次出现在屏幕上都触发,包括从下级页面返回&lt;/p&gt;

    &lt;p&gt;onReady:监听页面初次渲染完成&lt;/p&gt;

    &lt;p&gt;onHide:监听页面隐藏&lt;/p&gt;

    &lt;p&gt;onUnload:监听页面卸载&lt;/p&gt;

    &lt;p&gt;onPullDownRefresh:监听用户下拉动作，一般用于下拉刷新&lt;/p&gt;

    &lt;p&gt;onReachBottom:页面滚动到底部的事件（不是 scroll-view 滚到底），常用于下拉下一页数据。具体见下方注意事项&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;uni-app-发送网络请求&quot;&gt;uni-app 发送网络请求&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;uni.request(Object)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;object&quot;&gt;Object:&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;url: 开发者服务器接口地址 String 类型&lt;/li&gt;
  &lt;li&gt;data: 请求的参数 Object/String/ArraryBuffer&lt;/li&gt;
  &lt;li&gt;header: 设置请求的 header,header 中不能设置 Referer Object 类型&lt;/li&gt;
  &lt;li&gt;method: 请求的方法 String 类型 默认 GET&lt;/li&gt;
  &lt;li&gt;timeout: 超市时间,单位是 ms Number 类型&lt;/li&gt;
  &lt;li&gt;dataType: 如果设为 json,会尝试对返回的数据做一次 JSON.parse String 类型&lt;/li&gt;
  &lt;li&gt;success: 成功之后返回的回调函数&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;uni-app-异步数据缓存&quot;&gt;uni-app 异步数据缓存&lt;/h2&gt;

&lt;p&gt;设置缓存: uni.setStorage(Object)&lt;/p&gt;

&lt;p&gt;Object:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;key:本地缓存中的指定的 key String 类型&lt;/li&gt;
  &lt;li&gt;data:需要存储的内容&lt;/li&gt;
  &lt;li&gt;success:接口调用成功的回调函数&lt;/li&gt;
  &lt;li&gt;fail:接口调用失败的回调函数&lt;/li&gt;
  &lt;li&gt;complete:接口调用结束的回调函数(调用成功,失败都会执行)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;获取缓存: uni.getStorage(Object)&lt;/p&gt;

&lt;p&gt;Object:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;key:本地缓存中的指定的 key String 类型&lt;/li&gt;
  &lt;li&gt;success:接口调用成功的回调函数&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;成功的数据在返回的 res 里&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;fail:接口调用失败的回调函数&lt;/li&gt;
  &lt;li&gt;complete:接口调用结束的回调函数(调用成功,失败都会执行)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;移除缓存: uni.removeStorage(Object)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;key:本地缓存中指定的 key&lt;/li&gt;
  &lt;li&gt;success:接口调用成功的回调函数&lt;/li&gt;
  &lt;li&gt;fail:接口调用失败的回调函数&lt;/li&gt;
  &lt;li&gt;complete:接口调用结束的回调函数(调用成功,失败都会执行)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;uni-app-同步数据缓存&quot;&gt;uni-app 同步数据缓存&lt;/h2&gt;

&lt;p&gt;设置缓存: uni.setStorageSync(key,data))&lt;/p&gt;

&lt;p&gt;获取缓存: uni.getStorageSync(key)&lt;/p&gt;

&lt;p&gt;移除缓存: uni.removeStorageSync(key)&lt;/p&gt;

&lt;h2 id=&quot;uni-app-图片上传和预览&quot;&gt;uni-app 图片上传和预览&lt;/h2&gt;

&lt;h3 id=&quot;unichooseimageobject&quot;&gt;uni.chooseImage(Object)&lt;/h3&gt;

&lt;p&gt;从本地相册选择图片或使用相机拍照&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
        &lt;th&gt;参数名&lt;/th&gt;
        &lt;th&gt;类型&lt;/th&gt;
        &lt;th&gt;说明&lt;/th&gt;
        &lt;th&gt;差异&lt;/th&gt;
      &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td&gt;count&lt;/td&gt;
        &lt;td&gt;Number&lt;/td&gt;
        &lt;td&gt;最多可以选择图片的数量,默认9&lt;/td&gt;
        &lt;td&gt;count 值在 H5 平台的表现，基于浏览器本身的规范。目前测试的结果来看，只能限制单选/多选，并不能限制数量。并且，在实际的手机浏览器很少有能够支持多选的。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;sizeType&lt;/td&gt;
        &lt;td&gt;Array&amp;lt;\String&amp;gt;	&lt;/td&gt;
        &lt;td&gt;original 原图，compressed 压缩图，默认二者都有&lt;/td&gt;
        &lt;td&gt;App、微信小程序、支付宝小程序、百度小程序&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;extension&lt;/td&gt;
        &lt;td&gt;Array&amp;lt;\String&amp;gt;	&lt;/td&gt;
        &lt;td&gt;根据文件拓展名过滤，每一项都不能是空字符串。默认不过滤。&lt;/td&gt;
        &lt;td&gt;H5(HBuilder X2.9.9+)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;sourceType&lt;/td&gt;
        &lt;td&gt;Array&amp;lt;\String&amp;gt;	&lt;/td&gt;
        &lt;td&gt;album 从相册选图，camera 使用相机，默认二者都有。如需直接开相机或直接选相册，请只使用一个选项&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;crop&lt;/td&gt;
        &lt;td&gt;Object&lt;/td&gt;
        &lt;td&gt;图像裁剪参数，设置后 sizeType 失效&lt;/td&gt;
        &lt;td&gt;App 3.1.19+&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;success&lt;/td&gt;
        &lt;td&gt;Function&lt;/td&gt;
        &lt;td&gt;成功则返回图片的本地文件路径列表 tempFilePaths&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;fail&lt;/td&gt;
        &lt;td&gt;Function&lt;/td&gt;
        &lt;td&gt;接口调用失败的回调函数&lt;/td&gt;
        &lt;td&gt;小程序、App&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;complete&lt;/td&gt;
        &lt;td&gt;Function&lt;/td&gt;
        &lt;td&gt;接口调用结束的回调函数（调用成功、失败都会执行）&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;unipreviewimageobject&quot;&gt;uni.previewImage(OBJECT)&lt;/h2&gt;

&lt;p&gt;图片预览&lt;/p&gt;

&lt;table&gt;
    &lt;thead&gt;
      &lt;tr&gt;
        &lt;th&gt;参数名&lt;/th&gt;
        &lt;th&gt;类型&lt;/th&gt;
        &lt;th&gt;说明&lt;/th&gt;
        &lt;th&gt;差异&lt;/th&gt;
      &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td&gt;current&lt;/td&gt;
        &lt;td&gt;String/Number&lt;/td&gt;
        &lt;td&gt;为当前显示图片的链接/索引值，不填或填写的值无效则为 urls 的第一张&lt;/td&gt;
        &lt;td&gt;App平台在 1.9.5至1.9.8之间，current为必填。不填会报错&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;urls&lt;/td&gt;
        &lt;td&gt;Array&amp;lt;\String&amp;gt;&lt;/td&gt;
        &lt;td&gt;需要预览的图片链接列表&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;indicator&lt;/td&gt;
        &lt;td&gt;String&lt;/td&gt;
        &lt;td&gt;图片指示器样式，可取值：&quot;default&quot; - 底部圆点指示器； &quot;number&quot; - 顶部数字指示器； &quot;none&quot; - 不显示指示器。&lt;/td&gt;
        &lt;td&gt;App&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;loop&lt;/td&gt;
        &lt;td&gt;Boolean&lt;/td&gt;
        &lt;td&gt;是否可循环预览，默认值为 false&lt;/td&gt;
        &lt;td&gt;App&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;longPressActions&lt;/td&gt;
        &lt;td&gt;Object&lt;/td&gt;
        &lt;td&gt;长按图片显示操作菜单，如不填默认为保存相册&lt;/td&gt;
        &lt;td&gt;App 1.9.5+&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;success&lt;/td&gt;
        &lt;td&gt;Function&lt;/td&gt;
        &lt;td&gt;接口调用成功的回调函数&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;fail&lt;/td&gt;
        &lt;td&gt;Function&lt;/td&gt;
        &lt;td&gt;接口调用失败的回调函数	&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;complete&lt;/td&gt;
        &lt;td&gt;Function&lt;/td&gt;
        &lt;td&gt;接口调用结束的回调函数（调用成功、失败都会执行）&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;条件注释实现跨段兼容&quot;&gt;条件注释实现跨段兼容&lt;/h2&gt;

&lt;p&gt;条件编译使用特殊的注释作为标记,在编译时根据这些特殊的注释,将注释里面的代码编译到不同平台&lt;/p&gt;

&lt;p&gt;写法:以 &lt;strong&gt;#ifdef&lt;/strong&gt; 或 &lt;strong&gt;#inndef&lt;/strong&gt; 加 &lt;strong&gt;%PLATFORM&lt;/strong&gt; 开头,以&lt;strong&gt;#endif&lt;/strong&gt; 结尾&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;#ifdef: if defined 仅在某平台存在&lt;/li&gt;
  &lt;li&gt;#inndef: if not defined 除了某平台均存在&lt;/li&gt;
  &lt;li&gt;%PLATFORM: 平台名称&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
        &lt;th&gt;条件编译写法&lt;/th&gt;
        &lt;th&gt;说明&lt;/th&gt;
      &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td&gt;
          #ifdef APP-PLUS &lt;br /&gt;
          需要条件编译的代码 &lt;br /&gt;
          #endif
        &lt;/td&gt;
        &lt;td&gt;仅出现在 App 平台下的代码&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;
          #ifndef H5 &lt;br /&gt;
          需要条件编译的代码 &lt;br /&gt;
          #endif
        &lt;/td&gt;
        &lt;td&gt;除了H5平台,其他平台均存在的代码&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;
          #ifdef H5 || MP-WEIXIN &lt;br /&gt;
          需要条件编译的代码 &lt;br /&gt;
          #endif
        &lt;/td&gt;
        &lt;td&gt;除了H5平台或微信小程序平台存在的代码(这里只有 || ,不可能出现&amp;amp;&amp;amp;,因为没有交集)&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;%PLATFORM% 可取值如下：&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
        &lt;th&gt;值&lt;/th&gt;
        &lt;th&gt;生效条件&lt;/th&gt;
      &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td&gt;VUE3&lt;/td&gt;
        &lt;td&gt;HBuilderX 3.2.0+ &lt;a href=&quot;https://ask.dcloud.net.cn/article/37834&quot;&gt;详情&lt;/a&gt; &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;APP-PLUS&lt;/td&gt;
        &lt;td&gt;App&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;APP-PLUS-NVUE或APP-NVUE&lt;/td&gt;
        &lt;td&gt;App nvue&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;H5&lt;/td&gt;
        &lt;td&gt;H5&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;MP-WEIXIN&lt;/td&gt;
        &lt;td&gt;微信小程序&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;MP-ALIPAY&lt;/td&gt;
        &lt;td&gt;支付宝小程序&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;MP-BAIDU&lt;/td&gt;
        &lt;td&gt;百度小程序&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;MP-TOUTIAO&lt;/td&gt;
        &lt;td&gt;字节跳动小程序&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;MP-QQ&lt;/td&gt;
        &lt;td&gt;QQ小程序&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;MP-KUAISHOU&lt;/td&gt;
        &lt;td&gt;快手小程序&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;H5&lt;/td&gt;
        &lt;td&gt;H5&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;MP-360&lt;/td&gt;
        &lt;td&gt;360小程序&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;MP&lt;/td&gt;
        &lt;td&gt;微信小程序/支付宝小程序/百度小程序/字节跳动小程序/QQ小程序/360小程序&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;QUICKAPP-WEBVIEW&lt;/td&gt;
        &lt;td&gt;快应用通用(包含联盟、华为)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;QUICKAPP-WEBVIEW-UNION&lt;/td&gt;
        &lt;td&gt;快应用联盟&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;QUICKAPP-WEBVIEW-HUAWEI	&lt;/td&gt;
        &lt;td&gt;快应用华为&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;路由与跳转-navigator&quot;&gt;路由与跳转 (navigator)&lt;/h2&gt;

&lt;p&gt;页面跳转 该组件类似 HTML 中的&lt;a&gt;组件,但只能跳转本地页面.目标页面必须在 pages.json 中注册&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;生命式导航属性说明:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
        &lt;th&gt;属性名&lt;/th&gt;
        &lt;th&gt;类型&lt;/th&gt;
        &lt;th&gt;默认值&lt;/th&gt;
        &lt;th&gt;说明&lt;/th&gt;
        &lt;th&gt;平台差异&lt;/th&gt;
      &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td&gt;url&lt;/td&gt;
        &lt;td&gt;String&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;应用内的跳转链接，值为相对路径或绝对路径&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;open-type&lt;/td&gt;
        &lt;td&gt;String&lt;/td&gt;
        &lt;td&gt;navigate&lt;/td&gt;
        &lt;td&gt;跳转方式. 值有:navigate,redirect,switchTab,reLaunch,navigateBack,exit&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;delta&lt;/td&gt;
        &lt;td&gt;Number&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;当 open-type 为 'navigateBack' 时有效，表示回退的层数&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;animation-type&lt;/td&gt;
        &lt;td&gt;String&lt;/td&gt;
        &lt;td&gt;pop-in/out&lt;/td&gt;
        &lt;td&gt;当 open-type 为 navigate、navigateBack 时有效，窗口的显示/关闭动画效果 &lt;a href=&quot;https://uniapp.dcloud.io/api/router?id=animation&quot;&gt;详情&lt;/a&gt;&lt;/td&gt;
        &lt;td&gt;App&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;animation-duration&lt;/td&gt;
        &lt;td&gt;Number&lt;/td&gt;
        &lt;td&gt;300&lt;/td&gt;
        &lt;td&gt;当 open-type 为 navigate、navigateBack 时有效，窗口显示/关闭动画的持续时间。&lt;/td&gt;
        &lt;td&gt;App&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;hover-class&lt;/td&gt;
        &lt;td&gt;String&lt;/td&gt;
        &lt;td&gt;navigator-hover&lt;/td&gt;
        &lt;td&gt;指定点击时的样式类，当hover-class=&quot;none&quot;时，没有点击态效果&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;hover-stop-propagation&lt;/td&gt;
        &lt;td&gt;Boolean&lt;/td&gt;
        &lt;td&gt;false&lt;/td&gt;
        &lt;td&gt;指定是否阻止本节点的祖先节点出现点击态&lt;/td&gt;
        &lt;td&gt;微信小程序&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;hover-start-time&lt;/td&gt;
        &lt;td&gt;Number&lt;/td&gt;
        &lt;td&gt;50&lt;/td&gt;
        &lt;td&gt;按住后多久出现点击态，单位毫秒&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;hover-stay-time&lt;/td&gt;
        &lt;td&gt;Number&lt;/td&gt;
        &lt;td&gt;600&lt;/td&gt;
        &lt;td&gt;手指松开后点击态保留时间，单位毫秒&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;target&lt;/td&gt;
        &lt;td&gt;String&lt;/td&gt;
        &lt;td&gt;self&lt;/td&gt;
        &lt;td&gt;在哪个小程序目标上发生跳转，默认当前小程序，值域self/miniProgram&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;示例&quot;&gt;示例&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;navigator&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;navigate/navigate?title=navigate&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hover&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;navigator-hover&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;跳转到新页面&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/button&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/navigator&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;编程式导航:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;uni.navigateTo(OBJECT)&lt;/p&gt;

    &lt;p&gt;OBJECT 参数说明&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;url: String 类型, 必填, 需要跳转的应用内非 tabBar 的页面的路径 , 路径后可以带参数。参数与路径之间使用?分隔，参数键与参数值用=相连，不同参数用&amp;amp;分隔；如 ‘path?key=value&amp;amp;key2=value2’，path 为下一个页面的路径，下一个页面的 onLoad 函数可得到传递的参数&lt;/li&gt;
      &lt;li&gt;animationType: String 类型, 非必填, 默认值:pop-in, 窗口显示的动画效果 &lt;a href=&quot;https://uniapp.dcloud.io/api/router?id=animation&quot;&gt;详情&lt;/a&gt; 仅支持 APP&lt;/li&gt;
      &lt;li&gt;animationDuration: Number 类型, 非必填, 默认值:300, 窗口动画持续时间，单位为 ms 仅支持 APP&lt;/li&gt;
      &lt;li&gt;events: Object 类型, 非必填, 页面间通信接口，用于监听被打开页面发送到当前页面的数据。2.8.9+ 开始支持。&lt;/li&gt;
      &lt;li&gt;success: 成功回调&lt;/li&gt;
      &lt;li&gt;fail: 失败回调&lt;/li&gt;
      &lt;li&gt;complete: 接口调用结束的回调&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;uni.redirectTo(OBJECT)&lt;/p&gt;

    &lt;p&gt;会销毁当前页面&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;uni-app-组件&quot;&gt;uni-app 组件&lt;/h2&gt;

&lt;p&gt;组件的生命周期同 vue 2.0&lt;/p&gt;

&lt;h3 id=&quot;组件的通讯&quot;&gt;组件的通讯&lt;/h3&gt;

&lt;p&gt;父-&amp;gt;子: 在父组件中给子组件绑定属性,在子组件中通过 props 接收 (同 vue)&lt;/p&gt;

&lt;p&gt;子-&amp;gt;父: 通过$emit 来触发事件 (同 vue)&lt;/p&gt;

&lt;p&gt;兄弟组件之间传值: uni.on() 注册全局监听的事件 uni.$emit() 触发全局的监听事件&lt;/p&gt;

&lt;h2 id=&quot;uni-ui-的使用&quot;&gt;uni-ui 的使用&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://uniapp.dcloud.io/component/README?id=uniui&quot;&gt;地址&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;封装-unirequest-请求&quot;&gt;封装 uni.request 请求&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BASE_URL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;xxxxxxxxxxxx&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myRequest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;uni&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;BASE_URL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;GET&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;uni&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;showToast&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;获取数据失败&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;fail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;uni&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;showToast&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;请求接口失败&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;在 main.js 中导入&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;import {myRequest} from ‘./pages/util/api.js’&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Vue.prototype.$myRequest = myRequest&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;小程序的发布&quot;&gt;小程序的发布&lt;/h2&gt;

&lt;p&gt;在 manifest.js 页面的 微信小程序配置中 配置 AppID 在微信开发者工具中点击上传即可&lt;/p&gt;

&lt;h3 id=&quot;微信小程序发布线上地址&quot;&gt;微信小程序发布线上地址&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;需要线上的接口地址 在代码中将请求换成线上的地址&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;将线上地址的接口域名配置到 小程序的服务器域名&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;发布上线的时候需要将字体图标放到线上的服务器中&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;h5-的发布&quot;&gt;h5 的发布&lt;/h2&gt;

&lt;p&gt;在 manifest.js 页面的 h5 配置中 配置 项目名称 路由方式 等&lt;/p&gt;

&lt;p&gt;点击 发行-&amp;gt; 网站-H5 手机版&lt;/p&gt;

&lt;h2 id=&quot;app-的发布&quot;&gt;App 的发布&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;在基础配置中 uni-app 应用标识 (没有的需要 重新获取)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;APP 图标配置&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;App 启动图配置&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;App SDK 配置 (用到哪些钩哪些)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;App 模块权限配置 (用到哪些钩哪些)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;App 原生插件配置&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;App 常用其他配置&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;点击发行 -&amp;gt; App 云打包 (生成安卓, IOS 包,在公司 使用自有证书)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name>Tomiyzz Zhou</name><email>zzl180520@163.com</email></author><category term="mathjax" /><summary type="html">学习 UniApp 的历程</summary></entry><entry><title type="html">Welcome to 记录学习历程</title><link href="http://localhost:4000/2020/09/29/welcome-to-not-pure-poole/" rel="alternate" type="text/html" title="Welcome to 记录学习历程" /><published>2020-09-29T23:18:00+08:00</published><updated>2020-10-01T01:08:25+08:00</updated><id>http://localhost:4000/2020/09/29/welcome-to-not-pure-poole</id><content type="html" xml:base="http://localhost:4000/2020/09/29/welcome-to-not-pure-poole/">&lt;p class=&quot;message&quot;&gt;Welcome to &lt;strong&gt;Not Pure Poole&lt;/strong&gt;! This is an example post to show the layout layout layout.&lt;/p&gt;

&lt;p&gt;First, do you notice the TOC on the right side? Try to scroll down to read this post, you’ll find that the TOC is always sticky in the viewport.&lt;/p&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis &lt;a href=&quot;#&quot;&gt;dis parturient montes&lt;/a&gt;, nascetur ridiculus mus. &lt;em&gt;Aenean eu leo quam.&lt;/em&gt; Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Curabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Etiam porta &lt;strong&gt;sem malesuada magna&lt;/strong&gt; mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.&lt;/p&gt;

&lt;h2 id=&quot;inline-html-elements&quot;&gt;Inline HTML elements&lt;/h2&gt;

&lt;p&gt;HTML defines a long list of available inline tags, a complete list of which can be found on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element&quot;&gt;Mozilla Developer Network&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;To bold text&lt;/strong&gt;, use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;To italicize text&lt;/em&gt;, use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;em&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;mark&gt;To highlight&lt;/mark&gt;, use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;mark&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Abbreviations, like &lt;abbr title=&quot;HyperText Markup Langage&quot;&gt;HTML&lt;/abbr&gt; should use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;abbr&amp;gt;&lt;/code&gt;, with an optional &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;title&lt;/code&gt; attribute for the full phrase.&lt;/li&gt;
  &lt;li&gt;Citations, like &lt;cite&gt;— Mark Otto&lt;/cite&gt;, should use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;cite&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;Deleted&lt;/del&gt; text should use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;del&amp;gt;&lt;/code&gt; and &lt;ins&gt;inserted&lt;/ins&gt; text should use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;ins&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Superscript &lt;sup&gt;text&lt;/sup&gt; uses &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;sup&amp;gt;&lt;/code&gt; and subscript &lt;sub&gt;text&lt;/sub&gt; uses &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;sub&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most of these elements are styled by browsers with few modifications on our part.&lt;/p&gt;

&lt;h2 id=&quot;footnotes&quot;&gt;Footnotes&lt;/h2&gt;

&lt;p&gt;Footnotes are supported as part of the Markdown syntax. Here’s one in action. Clicking this number&lt;sup id=&quot;fnref:fn-sample_footnote&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:fn-sample_footnote&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; will lead you to a footnote. The syntax looks like:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Clicking this number[^fn-sample_footnote]&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Each footnote needs the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;^fn-&lt;/code&gt; prefix and a unique ID to be referenced for the footnoted content. The syntax for that list looks something like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[^fn-sample_footnote]: Handy! Now click the return link to go back.&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You can place the footnoted content wherever you like. Markdown parsers should properly place it at the bottom of the post.&lt;/p&gt;

&lt;h2 id=&quot;heading&quot;&gt;Heading&lt;/h2&gt;

&lt;p&gt;Vivamus sagittis lacus vel augue rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.&lt;/p&gt;

&lt;h3 id=&quot;code&quot;&gt;Code&lt;/h3&gt;

&lt;p&gt;Inline code is available with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;code&amp;gt;&lt;/code&gt; element. Snippets of multiple lines of code are supported through Rouge. Longer lines will automatically scroll horizontally when needed. You may also use code fencing (triple backticks) for rendering code.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Example can be run directly in your JavaScript console&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Create a function that takes two arguments and returns the sum of those arguments&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;return a + b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Call the function&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// &amp;gt; 8&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You may also optionally show code snippets with line numbers. Add &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;linenos&lt;/code&gt; to the Rouge tags.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c1&quot;&gt;// Example can be run directly in your JavaScript console&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Create a function that takes two arguments and returns the sum of those arguments&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;return a + b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Call the function&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// &amp;gt; 8&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa.&lt;/p&gt;

&lt;h3 id=&quot;lists&quot;&gt;Lists&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Praesent commodo cursus magna, vel scelerisque nisl consectetur et.&lt;/li&gt;
  &lt;li&gt;Donec id elit non mi porta gravida at eget metus.&lt;/li&gt;
  &lt;li&gt;Nulla vitae elit libero, a pharetra augue.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Donec ullamcorper nulla non metus auctor fringilla. Nulla vitae elit libero, a pharetra augue.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Vestibulum id ligula porta felis euismod semper.&lt;/li&gt;
  &lt;li&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.&lt;/li&gt;
  &lt;li&gt;Maecenas sed diam eget risus varius blandit sit amet non magna.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Cras mattis consectetur purus sit amet fermentum. Sed posuere consectetur est at lobortis.&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;HyperText Markup Language (HTML)&lt;/dt&gt;
  &lt;dd&gt;The language used to describe and define the content of a Web page&lt;/dd&gt;

  &lt;dt&gt;Cascading Style Sheets (CSS)&lt;/dt&gt;
  &lt;dd&gt;Used to describe the appearance of Web content&lt;/dd&gt;

  &lt;dt&gt;JavaScript (JS)&lt;/dt&gt;
  &lt;dd&gt;The programming language used to build advanced Web sites and applications&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;h3 id=&quot;images&quot;&gt;Images&lt;/h3&gt;

&lt;p&gt;Quisque consequat sapien eget quam rhoncus, sit amet laoreet diam tempus. Aliquam aliquam metus erat, a pulvinar turpis suscipit at.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://placehold.it/800x400&quot; alt=&quot;placeholder&quot; title=&quot;Large example image&quot; /&gt;
&lt;img src=&quot;http://placehold.it/400x200&quot; alt=&quot;placeholder&quot; title=&quot;Medium example image&quot; /&gt;
&lt;img src=&quot;http://placehold.it/200x200&quot; alt=&quot;placeholder&quot; title=&quot;Small example image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Align to the center by adding &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;class=&quot;align-center&quot;&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://placehold.it/400x200&quot; alt=&quot;placeholder&quot; title=&quot;Medium example image&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;tables&quot;&gt;Tables&lt;/h3&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Upvotes&lt;/th&gt;
      &lt;th&gt;Downvotes&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tfoot&gt;
    &lt;tr&gt;
      &lt;td&gt;Totals&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Alice&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Bob&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Charlie&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Nullam id dolor id nibh ultricies vehicula ut id elit. Sed posuere consectetur est at lobortis. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Want to see something else added? &lt;a href=&quot;https://github.com/vszhub/not-pure-poole/issues/new&quot;&gt;Open an issue.&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:fn-sample_footnote&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;Handy! Now click the return link to go back. &lt;a href=&quot;#fnref:fn-sample_footnote&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Tomiyzz Zhou</name><email>zzl180520@163.com</email></author><category term="jekyll theme" /><category term="jekyll" /><category term="tutorial" /><summary type="html">Welcome to Not Pure Poole! This is an example post to show the layout layout layout.</summary></entry></feed>